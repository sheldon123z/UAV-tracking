node n1 {
    type router
    model mdr
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.1/32
	 ipv6 address 2001:0::1/128
	!
    }
    canvas c1
    iconcoords {71.0 51.0}
    labelcoords {71.0 83.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n1_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n2 {
    type router
    model mdr
    network-config {
	hostname n2
	!
	interface eth0
	 ip address 10.0.0.2/32
	 ipv6 address 2001:0::2/128
	!
    }
    canvas c1
    iconcoords {70.0 108.0}
    labelcoords {70.0 140.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n2_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n3 {
    type router
    model mdr
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.3/32
	 ipv6 address 2001:0::3/128
	!
    }
    canvas c1
    iconcoords {69.0 162.0}
    labelcoords {69.0 194.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n3_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n4 {
    type router
    model mdr
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 10.0.0.4/32
	 ipv6 address 2001:0::4/128
	!
    }
    canvas c1
    iconcoords {68.0 201.0}
    labelcoords {68.0 233.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n4_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n6 {
    type router
    model mdr
    network-config {
	hostname n6
	!
	interface eth0
	 ip address 10.0.0.6/32
	 ipv6 address 2001:0::6/128
	!
    }
    canvas c1
    iconcoords {181.0 43.0}
    labelcoords {181.0 75.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n6_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n7 {
    type router
    model mdr
    network-config {
	hostname n7
	!
	interface eth0
	 ip address 10.0.0.7/32
	 ipv6 address 2001:0::7/128
	!
    }
    canvas c1
    iconcoords {178.0 95.0}
    labelcoords {178.0 127.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n7_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n8 {
    type router
    model mdr
    network-config {
	hostname n8
	!
	interface eth0
	 ip address 10.0.0.8/32
	 ipv6 address 2001:0::8/128
	!
    }
    canvas c1
    iconcoords {176.0 151.0}
    labelcoords {176.0 183.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n8_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n9 {
    type router
    model mdr
    network-config {
	hostname n9
	!
	interface eth0
	 ip address 10.0.0.9/32
	 ipv6 address 2001:0::9/128
	!
    }
    canvas c1
    iconcoords {178.0 206.0}
    labelcoords {178.0 238.0}
    custom-image /data/uas-core/icons/uav/grey_plane.png
    services {zebra OSPFv3MDR vtysh SMF IPForward}
    custom-config {
	custom-config-id service:SMF
	custom-command SMF
	config {
	files=('startsmf.sh', )
	}
    }
    custom-config {
	custom-config-id service:SMF:startsmf.sh
	custom-command startsmf.sh
	config {
	#!/bin/sh
	# auto-generated by nrl.py:NrlSmf.generateconfig()
	nrlsmf instance n9_smf cf eth0 resequence on log /var/log/nrlsmf.log < /dev/null > /dev/null 2>&1 &
	
	
	}
    }
    interface-peer {eth0 n21}
}

node n11 {
    type router
    model PC
    network-config {
	hostname n11
	!
    }
    canvas c1
    iconcoords {1348.0 35.0}
    labelcoords {1348.0 67.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n12 {
    type router
    model PC
    network-config {
	hostname n12
	!
    }
    canvas c1
    iconcoords {1356.0 206.0}
    labelcoords {1356.0 238.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n13 {
    type router
    model PC
    network-config {
	hostname n13
	!
    }
    canvas c1
    iconcoords {1369.0 364.0}
    labelcoords {1369.0 396.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n14 {
    type router
    model PC
    network-config {
	hostname n14
	!
    }
    canvas c1
    iconcoords {1382.0 534.0}
    labelcoords {1382.0 566.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n16 {
    type router
    model PC
    network-config {
	hostname n16
	!
    }
    canvas c1
    iconcoords {1446.0 35.0}
    labelcoords {1446.0 67.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n17 {
    type router
    model PC
    network-config {
	hostname n17
	!
    }
    canvas c1
    iconcoords {1452.0 201.0}
    labelcoords {1452.0 233.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n18 {
    type router
    model PC
    network-config {
	hostname n18
	!
    }
    canvas c1
    iconcoords {1464.0 360.0}
    labelcoords {1464.0 392.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n19 {
    type router
    model PC
    network-config {
	hostname n19
	!
    }
    canvas c1
    iconcoords {1477.0 534.0}
    labelcoords {1477.0 566.0}
    custom-image /data/uas-core/icons/uav/grey_dot.png
}

node n21 {
    type wlan
    network-config {
	hostname wlan21
	!
	interface wireless
	 ip address 10.0.0.0/32
	 ipv6 address 2001:0::0/128
	!
	mobmodel
	coreapi
	basic_range
	!
    }
    custom-config {
	custom-config-id basic_range
	custom-command {3 3 9 9 9}
	config {
	range=1100
	bandwidth=54000000
	jitter=0
	delay=20000
	error=20
	}
    }
    canvas c1
    iconcoords {368.0 28.0}
    labelcoords {368.0 60.0}
    interface-peer {e0 n1}
    interface-peer {e1 n2}
    interface-peer {e2 n3}
    interface-peer {e3 n4}
    interface-peer {e5 n6}
    interface-peer {e6 n7}
    interface-peer {e7 n8}
    interface-peer {e8 n9}
}

link l1 {
    nodes {n21 n1}
}

link l2 {
    nodes {n21 n2}
}

link l3 {
    nodes {n21 n3}
}

link l4 {
    nodes {n21 n4}
}

link l6 {
    nodes {n21 n6}
}

link l7 {
    nodes {n21 n7}
}

link l8 {
    nodes {n21 n8}
}

link l9 {
    nodes {n21 n9}
}

canvas c1 {
    name {Canvas1}
    wallpaper-style {centered}
    wallpaper {/data/uas-core/icons/uav/stl_map.jpg}
    refpt {0 0 47.5791667 -122.132322 2.0}
    scale {150.0}
    size {1500 900}
}

hook 4:runtime_hook.sh {
#!/bin/sh
# session hook script; write commands here to execute on the host at the
# specified state

# Set initial waypoints
echo 100 150 > /tmp/n1_orig_wypt.txt
echo 100 300 > /tmp/n2_orig_wypt.txt
echo 100 450 > /tmp/n3_orig_wypt.txt
echo 100 600 > /tmp/n4_orig_wypt.txt
echo 400 150 > /tmp/n6_orig_wypt.txt
echo 400 300 > /tmp/n7_orig_wypt.txt
echo 400 450 > /tmp/n8_orig_wypt.txt
echo 400 600 > /tmp/n9_orig_wypt.txt

# Set multicast routes
vcmd -c /tmp/pycore.*/n1 -- /sbin/ip route add 224.0.0.0/4 dev eth0
vcmd -c /tmp/pycore.*/n2 -- /sbin/ip route add 224.0.0.0/4 dev eth0
vcmd -c /tmp/pycore.*/n3 -- /sbin/ip route add 224.0.0.0/4 dev eth0
vcmd -c /tmp/pycore.*/n4 -- /sbin/ip route add 224.0.0.0/4 dev eth0
vcmd -c /tmp/pycore.*/n6 -- /sbin/ip route add 224.0.0.0/4 dev eth0
vcmd -c /tmp/pycore.*/n7 -- /sbin/ip route add 224.0.0.0/4 dev eth0
vcmd -c /tmp/pycore.*/n8 -- /sbin/ip route add 224.0.0.0/4 dev eth0
vcmd -c /tmp/pycore.*/n9 -- /sbin/ip route add 224.0.0.0/4 dev eth0

sleep 5

# Start tracking scripts
#vcmd -c /tmp/pycore.*/n1 -- /data/uas-core/track_target.py -my 1 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n1.log 2>&1 &
#vcmd -c /tmp/pycore.*/n2 -- /data/uas-core/track_target.py -my 2 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n2.log 2>&1 &
#vcmd -c /tmp/pycore.*/n3 -- /data/uas-core/track_target.py -my 3 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n3.log 2>&1 &
#vcmd -c /tmp/pycore.*/n4 -- /data/uas-core/track_target.py -my 4 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n4.log 2>&1 &
#vcmd -c /tmp/pycore.*/n6 -- /data/uas-core/track_target.py -my 6 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n6.log 2>&1 &
#vcmd -c /tmp/pycore.*/n7 -- /data/uas-core/track_target.py -my 7 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n7.log 2>&1 &
#vcmd -c /tmp/pycore.*/n8 -- /data/uas-core/track_target.py -my 8 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n8.log 2>&1 &
#vcmd -c /tmp/pycore.*/n9 -- /data/uas-core/track_target.py -my 9 -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/track_n9.log 2>&1 &

# Start mobility scripts
vcmd -c /tmp/pycore.*/n1 -- /data/uas-core/move_node.py 1 67 36 70 40 200 > /tmp/move_n1.log 2>&1 &
vcmd -c /tmp/pycore.*/n2 -- /data/uas-core/move_node.py 2 67 85 70 40 200 > /tmp/move_n2.log 2>&1 &
vcmd -c /tmp/pycore.*/n3 -- /data/uas-core/move_node.py 3 67 139 70 40 200 > /tmp/move_n3.log 2>&1 &
vcmd -c /tmp/pycore.*/n4 -- /data/uas-core/move_node.py 4 67 186 70 40 200 > /tmp/move_n4.log 2>&1 &
vcmd -c /tmp/pycore.*/n6 -- /data/uas-core/move_node.py 6 167 36 70 40 200 > /tmp/move_n6.log 2>&1 &
vcmd -c /tmp/pycore.*/n7 -- /data/uas-core/move_node.py 7 167 85 70 40 200 > /tmp/move_n7.log 2>&1 &
vcmd -c /tmp/pycore.*/n8 -- /data/uas-core/move_node.py 8 167 139 70 40 200 > /tmp/move_n8.log 2>&1 &
vcmd -c /tmp/pycore.*/n9 -- /data/uas-core/move_node.py 9 167 186 70 40 200 > /tmp/move_n9.log 2>&1 &

# Start node coloring script
vcmd -c /tmp/pycore.*/n1 -- /data/uas-core/color_nodes.py -u 1 2 3 4 6 7 8 9 -t 11 12 13 14 16 17 18 19 -i 500 > /tmp/color_nodes.log 2>&1 &
}

option global {
    interface_names no
    ip_addresses no
    ipv6_addresses no
    node_labels yes
    link_labels no
    show_api no
    background_images no
    annotations yes
    grid no
    traffic_start 0
    mac_address_start 80
}

option session {
    controlnet=172.16.0.0/24
    controlnet_updown_script=
    enablerj45=1
    enablesdt=0
    preservedir=0
    sdturl=tcp://127.0.0.1:50000/
}

